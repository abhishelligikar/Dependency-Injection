@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Dependency Injection</h1>
    <p class="lead">
        Inversion of Control (IoC) refers to a programming style where a framework controls the program flow with the help of Dependency Injection.
    </p>
    <p><a href="https://docs.microsoft.com/en-us/aspnet/core/fundamentals/dependency-injection?view=aspnetcore-2.1" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div>
    <div>
        <h2>Getting started</h2>
        <p>
            Dependency injection (DI) is a technique for achieving loose coupling between objects and their collaborators, or dependencies. 
            Rather than directly instantiating collaborators, or using static references, the objects a class needs in order to 
            perform its actions are provided to the class in some fashion. Most often, classes will declare their dependencies via 
            their constructor, allowing them to follow the Explicit Dependencies Principle. 
            This approach is known as "constructor injection".
        </p>
        <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
</div>